"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from ding import utils
from enum import Enum
from typing import Optional

class LineType(str, Enum):
    r"""The type of phone line."""
    FIXED_LINE = 'FixedLine'
    MOBILE = 'Mobile'
    TOLL_FREE = 'TollFree'
    PREMIUM_RATE = 'PremiumRate'
    SHARED_COST = 'SharedCost'
    VOIP = 'Voip'
    PAGER = 'Pager'
    VOICE_MAIL = 'VoiceMail'
    UNIVERSAL_ACCESS = 'UniversalAccess'
    SERVICE = 'Service'
    UNKNOWN = 'Unknown'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LookupResponse:
    carrier: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carrier'), 'exclude': lambda f: f is None }})
    r"""The carrier of the phone number."""
    country_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country_code'), 'exclude': lambda f: f is None }})
    r"""The ISO 3166-1 alpha-2 country code of the phone number."""
    line_type: Optional[LineType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line_type'), 'exclude': lambda f: f is None }})
    r"""The type of phone line."""
    mcc: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mcc'), 'exclude': lambda f: f is None }})
    r"""The mobile country code of the phone number."""
    mnc: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mnc'), 'exclude': lambda f: f is None }})
    r"""The mobile network code of the phone number."""
    number_ported: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number_ported'), 'exclude': lambda f: f is None }})
    r"""Whether the phone number has been ported."""
    phone_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone_number'), 'exclude': lambda f: f is None }})
    r"""An E.164 formatted phone number."""
    

